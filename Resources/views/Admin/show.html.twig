{% extends "GloryMenuBundle::layout.html.twig" %}
{% block stylesheets %}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
{% endblock %}
{% block javascripts %}
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js" ></script>
    <script type="text/javascript">
        $(function () {
            $('#html1').on('changed.jstree', function (e, data) {

            }).jstree({
                "core": {
                    "animation": 0,
                    "check_callback": true

                },
                "types": {
                    "#": {
                        "max_children": 1,
                        "max_depth": 4,
                        "valid_children": ["root"]
                    },
                    "root": {
                        "icon": "fa fa-map",
                        "valid_children": ["default"]
                    },
                    "default": {
                        "valid_children": ["default", "file"]
                    },
                    "file": {
                        "icon": "fa fa-file",
                        "valid_children": []
                    }
                },
                "contextmenu": {
                    "items": function (o, cb) { // Could be an object directly
                        return {
                            "create": {
                                "separator_before": false,
                                "separator_after": true,
                                "_disabled": false, //(this.check("create_node", data.reference, {}, "last")),
                                "label": "Create",
                                "icon": "fa fa-file",
                                "action": function (data) {
                                    var inst = $.jstree.reference(data.reference),
                                            obj = inst.get_node(data.reference);
                                    inst.create_node(obj, {}, "last", function (new_node) {
                                        setTimeout(function () {
                                            inst.edit(new_node);
                                        }, 0);
                                    });
                                }
                            },
                            "rename": {
                                "separator_before": false,
                                "separator_after": false,
                                "_disabled": false, //(this.check("rename_node", data.reference, this.get_parent(data.reference), "")),
                                "label": "Rename",
                                /*!
                                 "shortcut"			: 113,
                                 "shortcut_label"	: 'F2',
                                 "icon"				: "glyphicon glyphicon-leaf",
                                 */
                                "action": function (data) {
                                    var inst = $.jstree.reference(data.reference),
                                            obj = inst.get_node(data.reference);
                                    inst.edit(obj);
                                }
                            },
                            "remove": {
                                "separator_before": false,
                                "icon": false,
                                "separator_after": false,
                                "_disabled": false, //(this.check("delete_node", data.reference, this.get_parent(data.reference), "")),
                                "label": "Delete",
                                "action": function (data) {
                                    var inst = $.jstree.reference(data.reference),
                                            obj = inst.get_node(data.reference);
                                    if (inst.is_selected(obj)) {
                                        inst.delete_node(inst.get_selected());
                                    } else {
                                        inst.delete_node(obj);
                                    }
                                }
                            },
                            "ccp": {
                                "separator_before": true,
                                "icon": false,
                                "separator_after": false,
                                "label": "Edit",
                                "action": false,
                                "submenu": {
                                    "paste": {
                                        "separator_before": false,
                                        "icon": false,
                                        "_disabled": function (data) {
                                            return !$.jstree.reference(data.reference).can_paste();
                                        },
                                        "separator_after": false,
                                        "label": "Paste",
                                        "action": function (data) {
                                            var inst = $.jstree.reference(data.reference),
                                                    obj = inst.get_node(data.reference);
                                            inst.paste(obj);
                                        }
                                    }
                                }
                            }
                        };
                    }
                },
                "plugins": [
                    "contextmenu", "dnd", "search",
                    "state", "types", "wholerow"
                ]
            });
        });
    </script>
{% endblock %}
{% block body %}
    <div class="box">
        <div class="box-header">
            <h3 class="box-title"><a href="{{path('glory_menu_add',{id:menu.id})}}" class="btn btn-success">Add Item</a></h3>
            <div class="box-tools">

            </div>
        </div>
        <div class="box-body">
            <div id="html1">
                <ul>
                    <li>{{menu.label}}
                        <ul>                         
                            {% for item in menu.children %}
                                <li><a href="#"> {{ item.label }}</a></li>
                                {% endfor %}
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
        <div class="box-footer">
            <button type="submit" class="btn btn-default">保存</button>
        </div>
    </div>
{% endblock %}
